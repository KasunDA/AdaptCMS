tinymce.PluginManager.add("gist", function (e) {
    function t() {
        function t() {
            var t = [{
                    text: "None",
                    value: ""
                }
            ];
            return tinymce.each(e.settings.gist_list, function (e) {
                t.push({
                    text: e.text || e.title,
                    value: e.value || e.url,
                    menu: e.menu
                })
            }), t
        }
        function n(t) {
            var n = [{
                    text: "None",
                    value: ""
                }
            ];
            return tinymce.each(e.settings.rel_list, function (e) {
                n.push({
                    text: e.text || e.title,
                    value: e.value,
                    selected: t === e.value
                })
            }), n
        }
        function r(t) {
            var n = [{
                    text: "None",
                    value: ""
                }
            ];
            return e.settings.target_list || n.push({
                text: "New window",
                value: "_blank"
            }), tinymce.each(e.settings.target_list, function (e) {
                n.push({
                    text: e.text || e.title,
                    value: e.value,
                    selected: t === e.value
                })
            }), n
        }
        var o, a, s, l, c, u, d, f = {}, p = e.selection,
            h = e.dom;
        o = p.getNode(), a = h.getParent(o, "script[src]"), a && p.select(a), f.text = s = p.getContent({
            format: "text"
        }), f.src = a ? h.getAttrib(a, "src") : "", "IMG" == o.nodeName && (f.text = s = " "), e.settings.gist_list && (c = {
            type: "listbox",
            label: "Gist list",
            values: t(),
            onselect: function (e) {
                var t = l.find("#text");
                (!t.value() || e.lastControl && t.value() == e.lastControl.text()) && t.value(e.control.text()), l.find("#src").value(e.control.value())
            }
        }), l = e.windowManager.open({
            title: "Insert gist",
            data: f,
            body: [{
                    name: "src",
                    type: "filepicker",
                    filetype: "file",
                    size: 200,
                    autofocus: !0,
                    label: "Gist URL"
                },
                c, u, d
            ],
            onSubmit: function (t) {
                var n = t.data;
                // return n.src ? (n.text != s ? a ? (e.focus(), h.setAttribs(a, {
                //     src: n.src
                // }), p.select(a)) : e.insertContent(h.createHTML("div", { 'class': 'gist' }, h.createHTML("script", {
                //     src: n.src,
                // }, ''))) : e.execCommand("mceInsertGist", !1, {
                //     src: n.src,
                // }), void 0) : (e.execCommand("removegist"), void 0)
        		return e.insertContent(h.createHTML("script", {
                    src: n.src,
                    'class': 'gist'
                }, ''));
            }
        })
    }
    e.addButton("gist", {
        icon: "link",
        tooltip: "Insert/edit gist",
        onclick: t,
        stateSelector: "script[src]"
    }), e.addButton("removegist", {
        icon: "unlink",
        tooltip: "Remove gist(s)",
        cmd: "removegist",
        stateSelector: "script[src]"
    }), this.showDialog = t, e.addMenuItem("gist", {
        icon: "link",
        text: "Insert gist",
        onclick: t,
        stateSelector: "script[src]",
        context: "insert",
        prependToContext: !0
    })
});